/*
COLORS:
Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485
*/

/* Normalize.css is used to reset the css */
/* manual css reset * and body  */
*{
  margin: 0;
  padding: 0;
  box-sizing: border-box; /* borders and paddings are not added to the total width or total height that we specify for box-model*/
}

body{
  font-family: 'Lato', sans-serif;/* font related properties go here as they are inherited from the body */
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7; /* 1.7 times bigger than the previously defined line height */
  color: #777;
  /* padding: 30px; */
  /* padding-bottom: 0; */
}

.header{
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 131, 0.8)), url('../img/hero.jpg');
  background-size: cover; /* always tries to fit the image in the viewport height */
  background-position: top; /* keeps the top as it is and crops the bottom of the image. */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); /* used to give irregular shapes in the webpage. REFERENCE: CLIPPY TOOL*/
  position: relative; /* gives an origin for the absolute position*/
}

.logo-box{
  position: absolute;
  top: 40px;
  left: 40px;
}

.logo{
  height: 35px; /*width is taken care by the browser*/
}

.text-box{
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
}

.heading-primary{
  color: #fff;
  text-transform: uppercase;

  /* shaky effect is gone because of it  */
  backface-visibility: hidden; /* entire element moves on animation and is shaky. This property defines that back part of the element when we transform it is visible or hidden to the user*/

  margin-bottom: 60px;
}

.heading-primary-main{
  display: block;
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;

  animation-name: moveInLeft; /* name of the keyframes should match here. */
  animation-duration: 1s;  /* for how many time you want the animation to happen. */
  animation-timing-function: ease-out; /* faster and then slower */

  /* animation-iteration-count: infinite;  /* how many times you want your animation to happen*/
  /* animation-delay: 3s; /* after how much time you want to start the animation */
}

.heading-primary-sub{
  display: block;
  font-size: 20px;
  font-weight: 400;
  letter-spacing: 17.4px;
  font-weight: 700;

  animation: moveInRight 1s ease-out; /* name duration and timing-function*/
}

/* There are 2 types of animations in css
   1. Use transition property and change the property we want to animate
   2. Use animations
*/

/* Browsers arre optimized for opacity and transform pproperties */

@keyframes moveInLeft {
  0%{
    opacity: 0;
    transform: translateX(-100px);
  }

  80%{
    transform: translateX(10px);
  }

  100%{
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInRight {
  0%{
    opacity: 0;
    transform: translateX(100px);
  }

  80%{
    transform: translateX(-10px);
  }

  100%{
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInBottom {
  0%{
    opacity: 0;
    transform: translateY(30px);
  }

  100%{
    opacity: 1;
    transform: translate(0);
  }
}


/* pseudo class is a special state of for the selector */
.btn:link, .btn-visited {
  text-decoration: none;
  text-transform: uppercase;
  padding: 15px 40px;
  display: inline-block;
  border-radius: 100px;
  transition: all 0.2s;
  position: relative;
}

.btn:hover{
  transform: translateY(-3px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2); /* x y intensity color*/
}

.btn:active{
  transform: translate(-1px);
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
}

.btn-white{
  background-color: #fff;
  color: #777;
}

.btn::after{
  content: '';
  display: inline-block;
  height: 100%; /* of the height of the button */
  width: 100%; /* of the width of the button */
  border-radius: 100px;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all .4s;
}

.btn-white::after{
  background-color: #fff;
}

.btn:hover::after{
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}

.btn-animated{
  animation-name: moveInBottom;
  animation-duration: 1s;
  animation-timing-function: ease-out;
  animation-delay: 0.75s;
  animation-fill-mode: backwards; /* applies the style of 0% to the animation */
}
